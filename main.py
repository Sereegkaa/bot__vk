# -*- coding: utf-8 -*-
import random

import requests
import vk_api
from vk_api import longpoll
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import sqlite3

geocode_key = "40d1649f-0493-4b70-98ba-98533de7710b"
weather_key = "735a880881174d6285c1e29b46c54fa9"
search_text = '%D0%BC%D0%B0%D0%B3%D0%B0%D0%B7%D0%B8%D0%BD%20%D0%BF%D1%80%D0%BE%D0%B4%D1%83%' \
              'D0%BA%D1%82%D0%BE%D0%B2'

products = ''
foods = []
numbers = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü']
attachment = []
flag = False

vk_session = vk_api.VkApi(
    token='7743b35a5831ccea3966be434897942479514635d681b8b72285b76547191672c4fb3670a10802db84b12')
vk = vk_session.get_api()
longpoll = VkBotLongPoll(vk_session, 194438446)

con = sqlite3.connect("food.db")
cur = con.cursor()


# —Å–æ–∑–¥–∞–µ—Ç inline –ª–∏–±–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
def create_keyborad(ev):
    if 'inline_keyboard' in ev.client_info.keys():
        keyboard = VkKeyboard(inline=True)
    else:
        keyboard = VkKeyboard(one_time=True)
    return keyboard


# –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
def get_all_products():
    global cur
    result = [x[0].split(',') for x in cur.execute("SELECT products FROM food_list").fetchall()]
    a = result.copy()
    result = []
    for x in a:
        for y in x:
            result.append(y)
    return '\n'.join(set(result))


# –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–æ–¥—É–∫—Ç –∫ —É–∂–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–º
def add_product(ev):
    global products
    x = ev
    for ev in longpoll.listen():
        if ev.type == VkBotEventType.MESSAGE_NEW and ev.obj.message['from_id'] == x.obj.message[
            'from_id']:
            if ev.message['text'].lower() in ['–Ω–∞—á–∞—Ç—å', '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ',
                                              '–ø—Ä–∏–≤–µ—Ç–∏–∫', '–Ω–∞–∑–∞–¥', '–∑–∞–Ω–æ–≤–æ', '–Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞',
                                              '—Å–∞–ª–∞–º', '—Ö–∞–π']:
                start(vk, ev)

            tmp = products.split(',')
            tmp.append(ev.message['text'])
            products = ','.join(sorted(tmp))
            return


# —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–¥—É–∫—Ç
def del_product(ev):
    global products
    x = ev
    for ev in longpoll.listen():
        if ev.type == VkBotEventType.MESSAGE_NEW and ev.obj.message['from_id'] == x.obj.message[
            'from_id']:
            if ev.message['text'].lower() in ['–Ω–∞—á–∞—Ç—å', '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ',
                                              '–ø—Ä–∏–≤–µ—Ç–∏–∫', '–Ω–∞–∑–∞–¥', '–∑–∞–Ω–æ–≤–æ', '–Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞',
                                              '—Å–∞–ª–∞–º', '—Ö–∞–π']:
                start(vk, ev)

            tmp = products.split(',')
            try:
                tmp.remove(ev.message['text'])
            except Exception:
                vk.messages.send(user_id=ev.obj.message['from_id'],
                                 message=get_all_products() +
                                         "\n\n–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ø—Ä–æ–¥—É–∫—Ç—ã&#129365;"
                                         "&#129371;&#129472;, –∫–æ—Ç–æ—Ä—ã–µ —É –í–∞—Å –µ—Å—Ç—å",
                                 random_id=random.randint(0, 2 ** 64))
            products = ','.join(sorted(tmp))
            return


# –í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã?
def check_products(vk, ev):
    keyboard = create_keyborad(ev)
    keyboard.add_button("–î–∞", color=VkKeyboardColor.DEFAULT)
    keyboard.add_line()
    keyboard.add_button("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç", color=VkKeyboardColor.POSITIVE)
    keyboard.add_button("–£–±—Ä–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç", color=VkKeyboardColor.NEGATIVE)

    vk.messages.send(user_id=ev.obj.message['from_id'],
                     message=f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –í—ã –≤–≤–µ–ª–∏, –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ?)\n\n{products}",
                     random_id=random.randint(0, 2 ** 64),
                     keyboard=keyboard.get_keyboard())
    x = ev
    for ev in longpoll.listen():
        if ev.type == VkBotEventType.MESSAGE_NEW and ev.obj.message['from_id'] == x.obj.message[
            'from_id']:
            if ev.message['text'].lower() in ['–Ω–∞—á–∞—Ç—å', '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ',
                                              '–ø—Ä–∏–≤–µ—Ç–∏–∫', '–Ω–∞–∑–∞–¥', '–∑–∞–Ω–æ–≤–æ', '–Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞',
                                              '—Å–∞–ª–∞–º', '—Ö–∞–π']:
                start(vk, ev)
                return 'not'

            if ev.message['text'].lower() == '–¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç':
                vk.messages.send(user_id=ev.obj.message['from_id'],
                                 message="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ "
                                         "–¥–æ–±–∞–≤–∏—Ç—å&#10004;",
                                 random_id=random.randint(0, 2 ** 64))
                add_product(ev)
                return True

            if ev.message['text'].lower() == '—É–±—Ä–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç':
                keyboard = create_keyborad(ev)
                keyboard.add_button("–î–∞", color=VkKeyboardColor.DEFAULT)
                keyboard.add_line()
                keyboard.add_button("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç", color=VkKeyboardColor.POSITIVE)

                if len(products.split(',')) > 1:
                    vk.messages.send(user_id=ev.obj.message['from_id'],
                                     message="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ "
                                             "—É–±—Ä–∞—Ç—å&#10006;",
                                     random_id=random.randint(0, 2 ** 64))
                    del_product(ev)
                    return True
                else:
                    vk.messages.send(user_id=ev.obj.message['from_id'],
                                     message=f"–ù–µ–ª—å–∑—è —É–±—Ä–∞—Ç—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç!",
                                     random_id=random.randint(0, 2 ** 64),
                                     keyboard=keyboard.get_keyboard())
                    vk.messages.send(user_id=ev.obj.message['from_id'],
                                     message=f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –í—ã –≤–≤–µ–ª–∏, –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ?)"
                                             f"\n\n{products}",
                                     random_id=random.randint(0, 2 ** 64),
                                     keyboard=keyboard.get_keyboard())

            else:
                return False


# —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def start(vk, ev):
    global longpoll, products

    keyboard = create_keyborad(ev)
    keyboard.add_button('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button('–ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã', color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button('–í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã', color=VkKeyboardColor.DEFAULT)

    vk.messages.send(user_id=ev.obj.message['from_id'],
                     message="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ø—Ä–æ–¥—É–∫—Ç—ã&#129365;"
                             "&#129371;&#129472;, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É –í–∞—Å –∏ —è –ø–æ–¥–±–µ—Ä—É"
                             "&#128270; —Ä–µ—Ü–µ–ø—Ç –±–ª—é–¥–∞&#128523;, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –∏–∑ –Ω–∏—Ö "
                             "–ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å&#127828;&#127859;\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥–µ—Ç –Ω–µ —Ç–∞–∫&#128546;, "
                             "–í—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞'&#128260;",
                     random_id=random.randint(0, 2 ** 64),
                     keyboard=keyboard.get_keyboard())

    ev_now = ''
    x = ev
    for ev in longpoll.listen():
        if ev.type == VkBotEventType.MESSAGE_NEW and ev.obj.message['from_id'] == x.obj.message[
            'from_id']:

            if ev.message['text'].lower() in ['–Ω–∞—á–∞—Ç—å', '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ',
                                              '–ø—Ä–∏–≤–µ—Ç–∏–∫', '–Ω–∞–∑–∞–¥', '–∑–∞–Ω–æ–≤–æ', '–Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞',
                                              '—Å–∞–ª–∞–º', '—Ö–∞–π']:
                start(vk, ev)

            elif ev.message['text'] == '–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã':
                vk.messages.send(user_id=ev.obj.message['from_id'],
                                 message=get_all_products() +
                                         "\n\n–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ø—Ä–æ–¥—É–∫—Ç—ã&#129365;"
                                         "&#129371;&#129472;, –∫–æ—Ç–æ—Ä—ã–µ —É –í–∞—Å –µ—Å—Ç—å",
                                 random_id=random.randint(0, 2 ** 64))

            elif ev.message['text'].lower() == '–º–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã':
                print("---my foods---")
                return 'my_foods', ev

            elif ev.message['text'].lower() == '–≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã':
                ev_now = ev
                break

            else:
                ev_now = ev
                break
    print(ev.obj)
    products = ','.join(sorted(ev.message['text'].replace(' ', '').lower().split(',')))
    get_foods(vk, ev_now)


# –ø–æ–ª—É—á–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–∞–º
def get_foods(vk, ev):
    global products, foods, attachment

    a = check_products(vk, ev)
    print(a)
    if a != 'not':
        if a:
            check_products(vk, ev)

    foods_id = []
    tmp = sorted(products.split(','))
    result = cur.execute("""SELECT * FROM food_list WHERE is_open=1""").fetchall()

    for x in result:
        if len(set(sorted(x[2].split(','))).intersection(set(tmp))) >= len(x[2].split(',')):
            foods_id.append(x[0])
    print(tuple(foods_id))
    foods_id = tuple(foods_id)
    if len(foods_id) == 1:
        result = cur.execute(f"""SELECT * FROM food_list WHERE id={foods_id[0]}""").fetchall()
    elif foods_id:
        result = cur.execute(f"""SELECT * FROM food_list WHERE id IN{foods_id}""").fetchall()
    else:
        result = None

    if result:
        foods = [x[1] for x in result]
        attachment = [x[3] for x in result]
        foods_zip = list(zip(numbers, [x[1] for x in result]))
        message = "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å&#128298;:\n"
        for x in foods_zip:
            message = message + x[0] + ' ' + x[1] + '\n'
        print(f"""---{list(foods_zip)}---""")
        vk.messages.send(user_id=ev.obj.message['from_id'],
                         message=message,
                         random_id=random.randint(0, 2 ** 64),
                         keyboard=keyboard_number(ev, len(foods_zip)).get_keyboard())
        flag = False
    else:
        keyboard = create_keyborad(ev)
        keyboard.add_location_button()
        vk.messages.send(user_id=ev.obj.message['from_id'],
                         message="–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤&#128532;\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—ë "
                                 "–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∂—É –í–∞–º –±–ª–∏–∂–∞–π—à–∏–µ –º–∞–≥–∞–∑–∏–Ω—ã :)",
                         random_id=random.randint(0, 2 ** 64),
                         keyboard=keyboard.get_keyboard())


# —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–∏–≤–∞—Ç—É—Ä—É —Å —Ü–∏—Ñ—Ä–∞–º–∏
def keyboard_number(ev, n):
    keyboard = create_keyborad(ev)
    for i in range(n):
        keyboard.add_button(numbers[i])
        if i in [2, 5, 8] and i != (n - 1):
            keyboard.add_line()
    return keyboard


# —Ä–∞–±–æ—Ç–∞ —Å –≥–µ–æ–ø–æ–∑–∏—Ü–∏–µ–π
def geo(longpoll, vk, ev):
    global geocode_key, weather_key
    geopos = str(ev.message['geo']['coordinates']['longitude']) + ',' + str(
        ev.message['geo']['coordinates']['latitude'])
    lon, lat = geopos.split(',')

    geocoder_request = f"http://geocode-maps.yandex.ru/1.x/?apikey={geocode_key}&geocode={geopos}&format=json"
    response = requests.get(geocoder_request)
    toponym = ''
    if response:
        json_response = response.json()
        toponym = json_response["response"]["GeoObjectCollection"]["featureMember"][0][
            "GeoObject"]["metaDataProperty"]["GeocoderMetaData"]["text"]
    else:
        vk.messages.send(user_id=ev.obj.message['from_id'],
                         message="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –µ—â—ë —Ä–∞–∑)",
                         random_id=random.randint(0, 2 ** 64))

    keyboard = create_keyborad(ev)
    keyboard.add_location_button()
    map_request = f"http://static-maps.yandex.ru/1.x/?ll={geopos}&spn=0.002,0.002&l=map&pt={geopos},ya_ru"
    response = requests.get(map_request)
    if not response:
        print("–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞:")
        print("Http —Å—Ç–∞—Ç—É—Å:", response.status_code, "(", response.reason, ")")
        vk.messages.send(user_id=ev.obj.message['from_id'],
                         keyboard=keyboard.get_keyboard(),
                         message="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –µ—â—ë —Ä–∞–∑)",
                         random_id=random.randint(0, 2 ** 64))
    map_file = "map.png"
    keyboard = create_keyborad(ev)
    keyboard.add_button('–î–∞', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('–ù–µ—Ç', color=VkKeyboardColor.NEGATIVE)
    with open(map_file, "wb") as file:
        file.write(response.content)
    upload = vk_api.VkUpload(vk)
    photo = upload.photo_messages('map.png')
    owner_id = photo[0]['owner_id']
    photo_id = photo[0]['id']
    access_key = photo[0]['access_key']
    attachment = f'photo{owner_id}_{photo_id}_{access_key}'
    vk.messages.send(user_id=ev.obj.message['from_id'],
                     message=f"{toponym}\n–Ø –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª –í–∞—à –∞–¥—Ä–µ—Å&#127969;?",
                     attachment=attachment,
                     keyboard=keyboard.get_keyboard(),
                     random_id=random.randint(0, 2 ** 64))

    keyboard = create_keyborad(ev)
    keyboard.add_location_button()
    x = ev
    for ev in longpoll.listen():
        if ev.type == VkBotEventType.MESSAGE_NEW and ev.obj.message['from_id'] == x.obj.message[
            'from_id']:
            if ev.message['text'].lower() in ['–Ω–∞—á–∞—Ç—å', '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ',
                                              '–ø—Ä–∏–≤–µ—Ç–∏–∫', '–Ω–∞–∑–∞–¥', '–∑–∞–Ω–æ–≤–æ', '–Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞',
                                              '—Å–∞–ª–∞–º', '—Ö–∞–π']:
                start(vk, ev)

            if ev.message['text'] == '–ù–µ—Ç':
                vk.messages.send(user_id=ev.obj.message['from_id'],
                                 keyboard=keyboard.get_keyboard(),
                                 message="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –µ—â—ë —Ä–∞–∑)",
                                 random_id=random.randint(0, 2 ** 64))
            elif 'geo' in ev.message.keys():
                geo(longpoll, vk, ev)
            else:
                break

    weather_request = f"https://api.weatherbit.io/v2.0/current?key={weather_key}&lang=ru&lat={lat}&lon={lon}"
    weather = dict(*requests.get(weather_request).json()["data"])
    vk.messages.send(user_id=ev.obj.message['from_id'],
                     message=f"""–ù–∞ —É–ª–∏—Ü–µ –Ω–µ–ø–ª–æ—Ö–∞—è –ø–æ–≥–æ–¥–∫–∞&#9925; —á—Ç–æ–±—ã –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è –¥–æ –º–∞–≥–∞–∑–∏–Ω–∞"""
                             f"""&#128694;:)\n\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(float(weather['temp']))}¬∞C\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: """
                             f"""{round(float(weather['app_temp']))}¬∞C\n–í–µ—Ç–µ—Ä: {weather['wind_cdir_full']}, """
                             f"""{round(float(weather['wind_spd']))}–º/c\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: """
                             f"""{round(float(weather['rh']))}%\n–û–±–ª–∞—á–Ω–æ—Å—Ç—å: """
                             f"""{round(float(weather['clouds']))}%\n\nP.S. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å """
                             f"""–ø—Ä–æ–ø—É—Å–∫ –¥–ª—è –ø–æ—Ö–æ–¥–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ –Ω–æ–º–µ—Ä—É:\n8 (800) 450-48-58""",
                     random_id=random.randint(0, 2 ** 64))

    keyboard = create_keyborad(ev)
    keyboard.add_openlink_button(label='–ú–∞–≥–∞–∑–∏–Ω—ã —Ä—è–¥–æ–º',
                                 link=f"https://yandex.ru/maps/?text={search_text}&ll={str(geo)}&z=14")
    vk.messages.send(user_id=ev.obj.message['from_id'],
                     message="–í–æ—Ç –±–ª–∏–∂–∞–π—à–∏–µ –∫ –í–∞–º –º–∞–≥–∞–∑–∏–Ω—ã :)",
                     random_id=random.randint(0, 2 ** 64),
                     keyboard=keyboard.get_keyboard())


# –≤–∫–ª–∞–¥–∫–∞ –º–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã
def my_foods(vk, ev):
    global foods, attachment
    global flag
    result = cur.execute(
        f"""SELECT * FROM food_list WHERE user_id={ev.obj.message['from_id']}""").fetchall()
    print(result)

    keyboard = create_keyborad(ev)
    keyboard.add_button('–ù–∞–∑–∞–¥')

    if not result:
        vk.messages.send(user_id=ev.obj.message['from_id'],
                         keyboard=keyboard.get_keyboard(),
                         message="–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –í–∞—à–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ&#129396; —Ä–µ—Ü–µ–ø—Ç—ã –∏ "
                                 "—Ä–µ—Ü–µ–ø—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –í—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏&#129488;.\n–ù–æ –ø–æ–∫–∞ –∑–¥–µ—Å—å "
                                 "–ø—É—Å—Ç–æ&#128532;",
                         random_id=random.randint(0, 2 ** 64))

        for ev in longpoll.listen():
            if ev.type == VkBotEventType.MESSAGE_NEW:
                if ev.message['text'].lower() == '–Ω–∞–∑–∞–¥':
                    return False, ev
    else:
        foods = [x[1] for x in result]
        attachment = [x[3] for x in result]
        foods_zip = list(zip(numbers, [x[1] for x in result]))
        message = "–í–∞—à–∏ —Ä–µ—Ü–µ–ø—Ç—ã&#128298;:\n"
        for x in foods_zip:
            message = message + x[0] + ' ' + x[1] + '\n'
        print(f"""---{list(foods_zip)}---""")

        keyboard = keyboard_number(ev, len(foods_zip))
        keyboard.add_line()
        keyboard.add_button('–û—á–∏—Å—Ç–∏—Ç—å', color=VkKeyboardColor.NEGATIVE)

        vk.messages.send(user_id=ev.obj.message['from_id'],
                         message=message,
                         random_id=random.randint(0, 2 ** 64),
                         keyboard=keyboard.get_keyboard())
        flag = True
        return True, ev


# —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –≤ "–º–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã"
def food_save(food, vk, ev):
    global con, cur

    keyboard = create_keyborad(ev)
    keyboard.add_button('–ù–∞–π—Ç–∏ –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button('–ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã', color=VkKeyboardColor.PRIMARY)

    result = cur.execute("""SELECT * FROM food_list WHERE name=?""", (food[0],)).fetchall()
    tmp = (result[0][1], result[0][2], result[0][3], False, food[1])
    print('\n', tmp)
    result = cur.execute(
        f"""INSERT INTO food_list (name, products, link_photo, is_open, user_id) VALUES (?,?,?,?,?)""",
        tmp)
    con.commit()
    vk.messages.send(user_id=food[1],
                     keyboard=keyboard.get_keyboard(),
                     message="""–†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ "–ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã".""",
                     random_id=random.randint(0, 2 ** 64))
    for ev in longpoll.listen():
        if ev.type == VkBotEventType.MESSAGE_NEW:
            if ev.message['text'].lower() in ['–Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç', '–Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞']:
                start(vk, ev)

            elif ev.message['text'].lower() == '–º–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã':
                a = my_foods(vk, ev)
                if not a[0]:
                    start(vk, a[1])

            else:
                keyboard = create_keyborad(ev)
                keyboard.add_button('–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞')
                vk.messages.send(user_id=ev.obj.message['from_id'],
                                 message="–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é&#129320;\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞&#128521;",
                                 random_id=random.randint(0, 2 ** 64),
                                 keyboard=keyboard.get_keyboard())


# –≥–ª–∞–≤–Ω–∞—è —Ñ—É–∫–Ω—Ü–∏—è
def main():
    global vk_session, vk, longpoll, weather_key, search_text, products, foods, attachment, con, cur
    keyboard = VkKeyboard
    msg = ''

    for ev in longpoll.listen():
        # print(f"""foods:\n{foods}\n\nattachment:\n{attachment}""")
        if ev.type == VkBotEventType.MESSAGE_NEW:
            print(ev.obj)
            vk = vk_session.get_api()
            if ev.message['text'].lower() in ['–Ω–∞—á–∞—Ç—å', '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ',
                                              '–ø—Ä–∏–≤–µ—Ç–∏–∫', '–∑–∞–Ω–æ–≤–æ', '–Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞',
                                              '—Å–∞–ª–∞–º', '—Ö–∞–π', '—Å–Ω–∞—á–∞–ª–∞']:
                vk.messages.send(user_id=ev.obj.message['from_id'],
                                 message="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ",
                                 random_id=random.randint(0, 2 ** 64))

                tmp = start(vk, ev)
                if tmp:
                    if tmp[0] == 'my_foods':
                        print('my foods')
                        a = my_foods(vk, tmp[1])
                        if not a[0]:
                            start(vk, a[1])

            elif 'geo' in ev.message.keys():
                geo(longpoll, vk, ev)

            elif ev.message['text'].lower() == '–Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç':
                start(vk, ev)

            elif ev.message['text'].lower() == '–æ—á–∏—Å—Ç–∏—Ç—å':
                keyboard = create_keyborad(ev)
                keyboard.add_button('–°–Ω–∞—á–∞–ª–∞')

                cur.execute(f"""DELETE FROM food_list WHERE user_id='{ev.message['from_id']}'""")
                vk.messages.send(user_id=ev.obj.message['from_id'],
                                 keyboard=keyboard.get_keyboard(),
                                 message="–í–∞—à–∏ —Ä–µ—Ü–µ–ø—Ç—ã –æ—á–∏—â–µ–Ω—ã",
                                 random_id=random.randint(0, 2 ** 64))
                con.commit()

            elif ev.message['text'].lower() == '–Ω–∞–∑–∞–¥':
                a = my_foods(vk, ev)
                if not a[0]:
                    start(vk, a[1])

            elif ev.message['text'] in numbers:
                # print(foods, attachment, sep="\n")
                keyboard1 = create_keyborad(ev)
                keyboard1.add_button('–ù–∞–π—Ç–∏ –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç', color=VkKeyboardColor.PRIMARY)
                if not flag:
                    keyboard1.add_line()
                    keyboard1.add_button('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç', color=VkKeyboardColor.POSITIVE)
                else:
                    keyboard1.add_line()
                    keyboard1.add_button('–ù–∞–∑–∞–¥')

                msg = (foods[numbers.index(ev.message['text'])], ev.message['from_id'])

                vk.messages.send(user_id=ev.obj.message['from_id'],
                                 keyboard=keyboard1.get_keyboard(),
                                 message=msg[0],
                                 random_id=random.randint(0, 2 ** 64),
                                 attachment=attachment[numbers.index(ev.message['text'])])

            elif ev.message['text'].lower() == '—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç':
                food_save(msg, vk, ev)

            else:
                keyboard = create_keyborad(ev)
                keyboard.add_button('–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞')
                vk.messages.send(user_id=ev.obj.message['from_id'],
                                 message="–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é&#129320;\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞&#128521;",
                                 random_id=random.randint(0, 2 ** 64),
                                 keyboard=keyboard.get_keyboard())


if __name__ == '__main__':
    main()
